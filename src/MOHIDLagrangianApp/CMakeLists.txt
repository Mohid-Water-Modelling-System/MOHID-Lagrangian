message("At Application CMAKE file")

# Set Properties->General->Configuration Type to Application(.exe)
# Creates app.exe with the listed sources (main.cxx)
# Adds sources to the Solution Explorer

add_executable(${BIN_NAME} MOHIDLagrangian.f90)

if (CMAKE_HOST_WIN32)
    set(WINDOWS 1)
elseif(CMAKE_HOST_APPLE)
    set(LINUX 1)
    set(OSX 1)
elseif(CMAKE_HOST_UNIX)
    set(LINUX 1)
endif()

# Properties->Fortran->General->Additional Include Directories
include_directories (${LIBRARY_OUTPUT_PATH})
message(STATUS "Added " ${LIB_NAME} " output path " ${LIBRARY_OUTPUT_PATH})

set(base_LIBS_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/Base/build)
set(datetime_LIBS_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/datetime-fortran/build)
set(cvs_LIBS_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/fortran-csv-module/build)
set(FOX_LIBS_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/fox/build)
set(MOHIDBase_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/MOHID/build)
if(WINDOWS)
	set(hdf5_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/HDF5_1.8.17_x64)
	set(hdf5_DLL_PATH ${hdf5_PATH}/bin)
	set(hdf5_LIBS_PATH ${hdf5_PATH}/Lib)
	set(hdf5_MOD_PATH ${hdf5_PATH}/Include/fortran)
	set(proj4_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/Proj4)
	set(proj4_inc_PATH ${proj4_PATH}/Include)
	set(netcdf_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/Netcdf_4.4.1.1/VS2015/x64)
elseif(LINUX)
	set(zlib_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/zlib-1.2.11/build)
	set(zlib_LIBS_PATH ${zlib_PATH}/lib)
	set(zlib_MOD_PATH ${zlib_PATH}/include)
	#set(curl_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/curl-7.26.0/build)
	#set(curl_LIBS_PATH ${curl_PATH}/lib)
	#set(curl_MOD_PATH ${curl_PATH}/include/curl)
	set(hdf5_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/HDF5_1.8.17_x64/Linux/hdf5)
	set(hdf5_LIBS_PATH ${hdf5_PATH}/lib)
	set(hdf5_MOD_PATH ${hdf5_PATH}/include)
	set(proj4_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/Proj4/Linux/proj4-fortran/build)
	set(proj4_inc_PATH ${proj4_PATH}/include)
	set(netcdf_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/Netcdf_4.4.1.1/Linux/build)
	set(netcdfc_inc_PATH ${netcdf_PATH}/include)
	set(netcdfc_lib_PATH ${netcdf_PATH}/lib)
	set(netcdff_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/netcdf-fortran-4.4.4/build)
	set(netcdff_mod_PATH ${netcdff_PATH}/include)
	set(netcdff_lib_PATH ${netcdff_PATH}/lib)
endif()

include_directories(${zlib_LIBS_PATH})
include_directories(${zlib_MOD_PATH})
#include_directories(${curl_LIBS_PATH})
#include_directories(${curl_MOD_PATH})
include_directories(${hdf5_LIBS_PATH})
include_directories(${hdf5_MOD_PATH})
include_directories(${proj4_inc_PATH})
include_directories(${netcdf_PATH})
if(WINDOWS)
	include_directories(${hdf5_DLL_PATH})
elseif(LINUX)
	include_directories(${netcdfc_inc_PATH})
	include_directories(${netcdfc_lib_PATH})
	include_directories(${netcdff_mod_PATH})
	include_directories(${netcdff_lib_PATH})
endif()

include_directories(${base_LIBS_PATH}/modules)
include_directories(${base_LIBS_PATH}/lib)
include_directories(${datetime_LIBS_PATH}/modules)
include_directories(${datetime_LIBS_PATH}/lib)
include_directories(${cvs_LIBS_PATH}/modules)
include_directories(${cvs_LIBS_PATH}/lib)
include_directories(${FOX_LIBS_PATH}/modules)
include_directories(${FOX_LIBS_PATH}/lib)
include_directories(${MOHIDBase_PATH}/modules)
include_directories(${MOHIDBase_PATH}/lib)

message(STATUS "Added Base Libraries path " ${base_LIBS_PATH})
message(STATUS "Added DateTime Libraries path " ${datetime_LIBS_PATH})
message(STATUS "Added cvs Libraries path " ${cvs_LIBS_PATH})
message(STATUS "Added FoX Library path " ${FOX_LIBS_PATH})
message(STATUS "Added Zlib path " ${zlib_PATH})
message(STATUS "Added HDF5 path " ${hdf5_PATH})
message(STATUS "Added Proj4 path " ${proj4_PATH})
message(STATUS "Added NetCDF4 path " ${netcdf_PATH})
message(STATUS "Added NetCDF4 Fortran path " ${netcdff_PATH})
message(STATUS "Added MOHID Library path " ${MOHIDBase_PATH})

# Properties->Linker->Input->Additional Dependencies
if(WINDOWS)
  file(GLOB base_LIBS "${base_LIBS_PATH}/lib/RELEASE/*.lib")
  file(GLOB datetime_LIBS "${datetime_LIBS_PATH}/lib/RELEASE/*.lib")
  file(GLOB csv_LIBS "${cvs_LIBS_PATH}/lib/RELEASE/*.lib")
  file(GLOB FOX_LIBS "${FOX_LIBS_PATH}/lib/RELEASE/*.lib")
  file(GLOB MOHID_LIBS "${MOHIDBase_PATH}/lib/RELEASE/*.lib")
  file(GLOB HDF5_LIBS "${hdf5_PATH}/Lib/*.lib")
  file(GLOB HDF5_DLL_LIBS "${hdf5_DLL_PATH}/*.dll")
  file(GLOB NETCDF_LIBS "${netcdf_PATH}/*.lib")
  file(GLOB NETCDF_DLL_LIBS "${netcdf_PATH}/*.dll")
elseif(LINUX)
  file(GLOB base_LIBS "${base_LIBS_PATH}/lib/*.a")
  file(GLOB datetime_LIBS "${datetime_LIBS_PATH}/lib/*.a")
  file(GLOB csv_LIBS "${cvs_LIBS_PATH}/lib/*.a")
  file(GLOB FOX_LIBS "${FOX_LIBS_PATH}/lib/*.a")
  file(GLOB MOHID_LIBS "${MOHIDBase_PATH}/lib/*.a")
  file(GLOB HDF5_LIBS "${hdf5_PATH}/lib/*.a")
  file(GLOB ZLIB_LIBS "${zlib_PATH}/lib/*.a")
  #file(GLOB CURL_LIBS "${curl_PATH}/lib/*.a")
  file(GLOB NETCDFC_LIBS "${netcdfc_lib_PATH}/*.a")
  file(GLOB NETCDFF_LIBS "${netcdff_lib_PATH}/*.a")
endif()

message(STATUS "Targeting library " ${LIB_NAME})

target_link_libraries (${BIN_NAME}  ${LIB_NAME})
if(WINDOWS)
  target_link_libraries (${BIN_NAME} ${base_LIBS})
  target_link_libraries (${BIN_NAME} ${datetime_LIBS})
  target_link_libraries (${BIN_NAME} ${csv_LIBS})
  target_link_libraries (${BIN_NAME} ${FOX_LIBS})
  target_link_libraries (${BIN_NAME} ${MOHID_LIBS})
  target_link_libraries (${BIN_NAME} ${NETCDF_LIBS})
  target_link_libraries (${BIN_NAME} ${HDF5_LIBS})
elseif(OSX)
  target_link_libraries (${BIN_NAME} ${base_LIBS})
  target_link_libraries (${BIN_NAME} ${datetime_LIBS})
  target_link_libraries (${BIN_NAME} ${csv_LIBS})
  target_link_libraries (${BIN_NAME} ${FOX_LIBS})
  target_link_libraries (${BIN_NAME} ${MOHID_LIBS})
  target_link_libraries (${BIN_NAME} ${ZLIB_LIBS})
  #target_link_libraries (${BIN_NAME} ${CURL_LIBS})
  target_link_libraries (${BIN_NAME} ${HDF5_LIBS})
  target_link_libraries (${BIN_NAME} ${NETCDFC_LIBS})
  target_link_libraries (${BIN_NAME} ${NETCDFF_LIBS})
elseif(LINUX)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${base_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${datetime_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${csv_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${FOX_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${MOHID_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${ZLIB_LIBS} -Wl,--end-group)
  #target_link_libraries (${BIN_NAME}  -Wl,--start-group ${CURL_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${HDF5_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME}  -Wl,--start-group ${NETCDFC_LIBS} -Wl,--end-group)
  target_link_libraries (${BIN_NAME} dl )
  target_link_libraries (${BIN_NAME} -Wl,--start-group ${ZLIB_LIBS} ${HDF5_LIBS} ${NETCDFC_LIBS} ${NETCDFF_LIBS} -Wl,--end-group)
endif()

# Creates a folder "executables" and adds target project (app.vcproj) under it
set_property(TARGET ${BIN_NAME} PROPERTY FOLDER "executables")
set_property(TARGET ${BIN_NAME} PROPERTY LINKER_LANGUAGE Fortran)

# Properties->General->Output Directory
set_target_properties(${BIN_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)

if(WINDOWS)
	FOREACH(item ${NETCDF_DLL_LIBS})
	  add_custom_command(TARGET ${BIN_NAME} POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy_if_different
			"${item}"
			$<TARGET_FILE_DIR:${BIN_NAME}>)
	ENDFOREACH(item)
	# set(dlls_PATH ${PROJECT_SOURCE_DIR}/ExternalLibs/dlls)
	FOREACH(item ${HDF5_DLL_LIBS})
	  add_custom_command(TARGET ${BIN_NAME} POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy_if_different
			"${item}"
			$<TARGET_FILE_DIR:${BIN_NAME}>)
	ENDFOREACH(item)
endif()